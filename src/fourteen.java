//                            _ooOoo_
//                           o8888888o
//                           88" . "88
//                           (| -_- |)
//                            O\ = /O
//                        ____/`---'\____
//                      .   ' \\| |// `.
//                       / \\||| : |||// \
//                     / _||||| -:- |||||- \
//                       | | \\\ - /// | |
//                     | \_| ''\---/'' | |
//                      \ .-\__ `-` ___/-. /
//                   ___`. .' /--.--\ `. . __
//                ."" '< `.___\_<|>_/___.' >'"".
//               | | : `- \`.;`\ _ /`;.`/ - ` : | |
//                 \ \ `-. \_ __\ /__ _/ .-` / /
//         ======`-.____`-.___\_____/___.-`____.-'======
//                            `=---='
//
//         .............................................
//                  佛祖保佑             永无BUG

//          佛曰:
//                  写字楼里写字间，写字间里程序员；
//                  程序人员写程序，又拿程序换酒钱。
//                  酒醒只在网上坐，酒醉还来网下眠；
//                  酒醉酒醒日复日，网上网下年复年。
//                  但愿老死电脑间，不愿鞠躬老板前；
//                  奔驰宝马贵者趣，公交自行程序员。
//                  别人笑我忒疯癫，我笑自己命太贱；
//                  不见满街漂亮妹，哪个归得程序员？

/**
 * Created by Administrator on 2016/11/14.
 * email 1105896230@qq.com
 */

/**
 * 调整数组顺序使奇数位于偶数前面
 *
 * 输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数位于数组的前半部分，所有偶数位于数组的后半部分
 * 如果不考虑时间复杂度，最简单的思路应该是从头扫描这个数组，
 * 每碰到一个偶数时，拿出这个数字，
 * 并把位于这个数字后面的所有数字往前挪动一位。
 * 挪完之后在数组的末尾有一个空位，这时把该偶数放入这个空位。
 * 由于每碰到一个偶数就需要移动O(n)个数字，
 * 因此总的时间复杂度是O(n2)。
 *
 */
public class fourteen {

    void ReorderOddEven(int[] arr)
    {
        int i=0,j=arr.length-1;
        while(i<j)
        {
            while((i<j)&& isEvent(arr[i]))
                i++;
            while(i<j && isEvent(arr[j]))
                j--;
            swap(arr,i,j);
        }
    }
    void swap(int[] arr,int i,int j){
       int k=arr[j];
        arr[j]=arr[i];
        arr[i]=k;
    }
    private boolean isEvent(int n){
        return (n&1)==0;
    }
}
